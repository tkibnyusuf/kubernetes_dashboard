# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
on:
  push:
    branches: [master]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [master]
    paths-ignore:
      - "**/*.md"
  schedule:
    - cron: "0 0 * * 1"
permissions:
  contents: read
env:
  GOPATH: /home/runner/go/
  GOPROXY: "https://proxy.golang.org"
  NG_CLI_ANALYTICS: ci
  NODE_OPTIONS: "--max-old-space-size=8192"
  TERM: xterm
jobs:
  dependency-review:
    name: Dependency review
    if: github.event_name == 'pull_request'
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: critical

  codeql-analysis:
    name: CodeQL analysis
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ["go", "typescript"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: modules/api/go.mod
          check-latest: true
      - uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3

  static-check:
    name: Static check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: modules/api/go.mod
          check-latest: true
      - uses: actions/setup-node@v4
        with:
          node-version: 18.14.0
      - working-directory: modules/web
        run: yarn
      - run: PATH=$PATH:$GOPATH/bin make check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: modules/api/go.mod
          check-latest: true
      - working-directory: modules/web
        run: yarn
      - run: PATH=$PATH:$GOPATH/bin make build

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: make image

  unit-tests:
    name: Unit tests with coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5.0.1
        with:
          go-version-file: modules/go.work
          check-latest: true
      - uses: actions/setup-node@v4
        with:
          node-version: 18.14.0
      - working-directory: modules/web
        run: yarn
      - run: PATH=$PATH:$GOPATH/bin make coverage
      - uses: codecov/codecov-action@v4.5.0
        with:
          directory: ./.tmp
          token: ${{ secrets.CODECOV_TOKEN }}

# TODO: needs to be fixed
#  e2e-tests:
#    name: End-to-end tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - uses: helm/kind-action@v1.9.0
#        with:
#          node_image: kindest/node:v1.29.2
#      - uses: actions/setup-go@v5.0.1
#        with:
#          go-version-file: modules/api/go.mod
#          check-latest: true
#          cache-dependency-path: modules/api/go.sum
#      - working-directory: modules/api
#        run: go mod download
#      - uses: actions/setup-node@v4
#        with:
#          node-version: 18.14.0
#      - working-directory: modules/web
#        run: yarn
#      - run: PATH=$PATH:$GOPATH/bin make serve &
#      - run: yarn cypress
#        working-directory: modules/web
